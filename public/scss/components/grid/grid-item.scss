.grid-white .grid-item {
  background-color: $white;
  background-size: cover;
  color: $black;

  &:nth-child(5n + 1) {
    background-image: linear-gradient(rgba($black, 0.02), rgba($black, 0.02));
  }
  &:nth-child(5n + 2) {
    background-image: linear-gradient(rgba($black, 0.04), rgba($black, 0.04));
  }
  &:nth-child(5n + 3) {
    background-image: linear-gradient(rgba($black, 0.06), rgba($black, 0.06));
  }
  &:nth-child(5n + 4) {
    background-image: linear-gradient(rgba($black, 0.08), rgba($black, 0.08));
  }
}

.grid-color .grid-item {
  background-color: mix($white, $red, 10%);
  background-size: cover;
  color: $white;
  @include font-smoothing(true);

  &:nth-child(5n + 1) {
    background-color: $orange;
  }
  &:nth-child(5n + 2) {
    background-color: mix($red, $orange, 40%);
  }
  &:nth-child(5n + 3) {
    background-color: $red;
  }
  &:nth-child(5n + 4) {
    background-color: mix($white, $orange, 20%);
  }
}

.grid-item.shadow {
  box-shadow: 10px 10px 30px rgba($black, 0.15);
}

.item-header {}

.item-title {
  @include hyphen();
}

.item-copy {
  .grid-color & {
    opacity: 0.5;
  }
}

.grid-item .item-anchor {
  position: relative;
  margin-top: 1.6em;
  transition: color 0.25s, opacity 0.25s;

  .grid-color & {
    opacity: 0.5;
  }

  &:before {
    content: '';
    display: block;
    width: 3em;
    height: 3px;
    margin-bottom: 0.6em;
    background-size: cover;
    transform-origin: 0 50%;
    transform: scaleX(1) translateX(-33%);
    transition: transform 0.25s, background-color 0.25s;

    .grid-white & {
      background-image: linear-gradient(90deg, $orange, $red);
    }
    .grid-color & {
      background-color: rgba($white, 0.0);
      background-image: linear-gradient(90deg, rgba($white, 0.3), rgba($white, 1.0));
    }
  }
}

.grid-item:hover .item-anchor {
  .grid-white & {
    color: $red;
  }
  .grid-color & {
    opacity: 1;
  }

  &:before {
    transform: scaleX(2.3) translateX(0%);

    .grid-color & {
      background-color: rgba($white, 1.0);
    }
  }
}


// grid in landing view
.grid-landing .grid-item {

  &:nth-child(1) {
    transform: translateX(5%) translateY(0%) translateZ( calc(var(--z) * 0.3px) );

    @include breakpoint($medium-up) {
      transform: translateX(20%) translateY(-30%) translateZ( calc(var(--z) * 0.3px) );
    }
    @include breakpoint($large-up) {
      transform: translateX(20%) translateY(10%) translateZ( calc(var(--z) * 0.3px) );
    }
  }
  &:nth-child(2) {
    transform: translateX(20%) translateY(-15%) translateZ( calc(var(--z) * 0.9px) );
    z-index: 5;

    @include breakpoint($medium-up) {
      transform: translateX(-10%) translateY(0) translateZ( calc(var(--z) * 0.9px) );
    }
    @include breakpoint($large-up) {
      transform: translateX(0) translateY(40%) translateZ( calc(var(--z) * 0.9px) );
    }
  }
  &:nth-child(3) {
    transform: translateX(10%) translateY(0%) translateZ( calc(var(--z) * 3.5px) );
    z-index: 1;

    @include breakpoint($medium-up) {
      transform: translateX(10%) translateY(-10%) translateZ( calc(var(--z) * 3.5px) );
    }
    @include breakpoint($large-up) {
      transform: translateX(-30%) translateY(-30%) translateZ( calc(var(--z) * 3.5px) );
    }
  }
  &:nth-child(4) {
    transform: translateX(25%) translateY(10%) translateZ( calc(var(--z) * 1.0px) );
    z-index: 2;

    @include breakpoint($medium-up) {
      transform: translateX(-20%) translateY(30%) translateZ( calc(var(--z) * 1.0px) );
    }
    @include breakpoint($large-up) {
      transform: translateX(20%) translateY(20%) translateZ( calc(var(--z) * 1.0px) );
    }
  }
}










// for page transitions
$transition-offsets:
        '0.3px',
        '0.9px',
        '3.5px',
        '1.0px',
        '5.0px',
        '1.5px',
        '0.5px',
        '1.0px',
        '3.2px',
        '1.2px';

@for $i from 1 through length($transition-offsets) {
  .grid-item:nth-child(10n + #{$i}){
    transform: translateZ( calc(var(--z) * #{nth($transition-offsets, $i)}) );
  }
}
